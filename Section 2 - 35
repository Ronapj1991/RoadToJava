
public abstract class Machine {
	//add common stuff in parent class
	
	private int id;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}
	
	public abstract void start();
	public abstract void doStuff();
	public abstract void shutdown();
	
	public void run() {
		start();
		doStuff();
		shutdown();
	}
}




public class Camera extends Machine {

	@Override
	public void start() {
		System.out.println("Camera started..");
	}

	@Override
	public void doStuff() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void shutdown() {
		// TODO Auto-generated method stub
		
	}

}




public class Car extends Machine {

	@Override
	public void start() {
		System.out.println("Car started..");
	}

	@Override
	public void doStuff() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void shutdown() {
		// TODO Auto-generated method stub
		
	}

}






public class App {

	public static void main(String[] args) {

		Camera cam1 = new Camera();
		Car car1 = new Car();
		
		cam1.setId(5);
		car1.setId(7);
		
		
		//Machine machine1 = new Machine(); doesnt work because an abstract class
		
		car1.run();
		
	}

}
