import java.io.Serializable;

public class Person implements Serializable {
	
	
	private static final long serialVersionUID = 4801633306273802062L; //must be same with class that read and wrote a file
	
	private transient int id;//prevent id from being serialized
	private String name;
	
	private static int count;
	
	public Person() {
		System.out.println("default constructor..");
	}
	
	public Person(int id, String name) {
		this.id = id;
		this.name = name;
		
		System.out.println(("2 argument constructor"));
	}
	
	
	public static int getCount() {
		return count;
	}


	public static void setCount(int count) {
		Person.count = count;
	}


	@Override
	public String toString() {
		return "Person [id=" + id + ", name=" + name + "] Count is: " + count;
	}
	
	
}



import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;

public class WriteObjects {

	public static void main(String[] args) {
		System.out.println("Writing objects...");
		
		try (FileOutputStream fs = new FileOutputStream("test.ser"); ObjectOutputStream os = new ObjectOutputStream(fs)) {
			
			Person person = new Person(7, "Bob");
			Person.setCount(88);
			os.writeObject(person);
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}




import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;

public class ReadObjects {

	public static void main(String[] args) {
		System.out.println("Reading Objects...");
		
		try (FileInputStream fi = new FileInputStream("test.ser"); ObjectInputStream os = new ObjectInputStream(fi)) {
			
			Person person = (Person) os.readObject();
			System.out.println(person);
			
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
